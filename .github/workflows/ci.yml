name: Qubx CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install just
        uses: extractions/setup-just@v2
        
      - name: Set up Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Install dependencies
        run: just dev-install
        
      - name: Run style checks with ruff
        run: |
          pip install ruff
          ruff check . --output-format=github --exclude=experiments --exit-zero
          
      - name: Run tests
        run: just test-ci
    
      - name: Build package
        run: just build-fast
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 5
          
  deploy-test-pypi:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-24.04
    environment:
      name: testpypi
      url: https://test.pypi.org/p/qubx
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Check if version exists on TestPyPI
        id: check_version
        run: |
          if pip install --index-url https://test.pypi.org/simple/ qubx==${{ steps.get_version.outputs.VERSION }} 2>/dev/null; then
            echo "Version ${{ steps.get_version.outputs.VERSION }} already exists on TestPyPI"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Version ${{ steps.get_version.outputs.VERSION }} does not exist on TestPyPI"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Publish to TestPyPI
        if: steps.check_version.outputs.exists != 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          
  deploy-pypi:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-24.04
    environment:
      name: pypi
      url: https://pypi.org/p/qubx
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  deploy-docs:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements-docs.txt
          
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          
      - name: Deploy docs
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          mike deploy --push --update-aliases $VERSION latest
          mike set-default --push latest

